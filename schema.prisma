generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "postgresql"

  // Uses connection pooling
  url = env("POSTGRES_PRISMA_URL")
  
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
 
model Rucher {
  id                Int      @id @default(autoincrement())
  nom               String
  date_creation     DateTime @default(now())
  ruches            Ruche[]

}

model Ruche {
  id                Int      @id @default(autoincrement())
  nom               String
  rucher            Rucher   @relation(fields: [rucher_id], references: [id])
  rucher_id         Int
  date_creation     DateTime @default(now())
  trackers          Tracker[]
}

model Tracker {
  id                Int      @id @default(autoincrement())
  nom               String
  ruche             Ruche   @relation(fields: [ruche_id], references: [id])
  ruche_id          Int
  mode              TrackerMode
  date_ajout        DateTime @default(now())
  date_modification DateTime @updatedAt
  pause_duration    Int?     // Durée de la pause en secondes (nullable)
  pause_end_time    DateTime? // Date et heure de fin de la pause (nullable)
  deplacement       Boolean ? // Indique si la pause est un déplacement (nullable)
  historiques       Historique_Tracker[]
}

model Historique_Tracker {
  id                Int      @id @default(autoincrement())
  tracker           Tracker   @relation(fields: [tracker_id], references: [id])
  tracker_id        Int
  latitude          Float
  longitude         Float
  date_ajout        DateTime @default(now())
}

enum TrackerMode {
  INACTIF
  FONCTIONNEL
  PAUSE
  TRACKING
}